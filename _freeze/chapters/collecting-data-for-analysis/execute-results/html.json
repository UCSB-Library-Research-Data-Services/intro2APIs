{
  "hash": "d6327f104943dd3acb7d79da38cbe708",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Collecting Data for Analysis\"\nexecute:\n    echo: true\n    message: false\nformat:\n    html:\n        code-fold: false\nlightbox: true\n---\n\n\n\n\n\nDuring the previous chapters, we learned how to interact with APIs to retrieve data. We also practiced retrieving the total number of objects that contain a specific term in a particular department of the Metropolitan Museum of Art.\n\nIn this chapter, we will take the next step: collecting and analyzing data using the Metropolitan Museum of Art API. Specifically, we will explore the question: **What thematic areas can we identify from the terms associated with objects in the Medieval Art collection?**\n\nBy analyzing how pairs of terms co-occur, we aim to uncover thematic areas and explore whether these topics reveal insights about Medieval Art — at least from the perspective of the Metropolitan Museum of Art's metadata.\n\nThis chapter showcases how computational approaches can reveal hidden patterns in cultural data. By analyzing co-occurring terms in museum metadata, we aim to uncover thematic areas that define Medieval Art, helping us explore the implicit narratives within museum collections.\n\n## Preparing the data collection and preservation\n\nBefore starting to collect data, it's important to think ahead and plan how the data will be collected, stored, and preserved for future use. Although this is a small project, we can follow some best practices to ensure data integrity and reproducibility.\n\nOur first step is to create a directory structure to store the data and file naming conventions. We will create a directory called `data` to store both the raw and processed data. We will also create a directory to store the code used to collect data, and a directory to store the results of the analysis. Additionally, we will create a `README.md` file to document the project and a `LICENSE` file to specify the license under which the data is made available.\n\nThe project directory structure would look like this:\n\n```\nproject/\n├── data/\n│   ├── raw/ # Original, unprocessed data\n│   ├── processed/ # Cleaned and transformed data for analysis\n├── code/ # Scripts used for data collection and processing\n├── README.md # Project documentation\n├── LICENSE # Licensing information\n```\n\nTo ensure consistency, we will use **clear** and **descriptive** names for our files. For example:\n\n- `raw_medieval_art_tags.csv`: The original data collected from the API.\n- `processed_term_pairs.csv`: The processed dataset containing term pairs with weights.\n\nVisit the project repository on GitHub to explore the full directory structure, example files, and scripts.\n\n::: {.callout-tip collapse=\"false\"}\n## About Data Use\nIt’s important to check the data source documentation to identify the terms of use and any possible restrictions. In this case, the Metropolitan Museum of Art has published the data under a [Creative Commons Zero (CC0)](https://creativecommons.org/publicdomain/zero/1.0/) license. This means the data is free to use and distribute without restrictions.\nFor more details, visit the [API documentation](https://metmuseum.github.io/).\n:::\n\n## What data to collect?\n\nBefore starting to collect data, we need to explore what data is available and how it can help answer our research question. \n\nThe first step is to examine a random object from the Medieval Art collection to identify useful fields for our analysis. We can use the endpoint `https://collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=17` to retrieve a list of object IDs from the Medieval Art collection. Simply paste the full endpoint into your browser to see a response like this:\n\n```json\n\n{\n     \"total\": 7136,\n     \"objectIDs\": [\n        32830, 32831, 32832, 32833, 32834,\n        32835, 32836, 32837, 32838, 32839,\n        // ... many more IDs ...\n        818469, 818574, 831188\n        ]\n}\n\n```\n\nOnce we have an object ID, we can use it to get detailed information about that object by appending the ID to the endpoint `https://collectionapi.metmuseum.org/public/collection/v1/objects/{objectID}`. For example, the object with ID 32830 gives the following detailed response:\n\n```json\n{\n  \"objectID\": 32830,\n  \"isHighlight\": false,\n  \"accessionNumber\": \"23.21.2\",\n  \"accessionYear\": \"1923\",\n  \"isPublicDomain\": true,\n  \"primaryImage\": \"https://images.metmuseum.org/CRDImages/md/original/DP164978.jpg\",\n  \"primaryImageSmall\": \"https://images.metmuseum.org/CRDImages/md/web-large/DP164978.jpg\",\n  \"additionalImages\": [\n    \"https://images.metmuseum.org/CRDImages/md/original/DP164979.jpg\"\n  ],\n  \"constituents\": null,\n  \"department\": \"Medieval Art\",\n  \"objectName\": \"Manuscript cutting from a Dominican antiphonary\",\n  \"title\": \"Initial P with the Martyrdom of Saint Peter Martyr\",\n  \"culture\": \"Italian\",\n  \"period\": \"\",\n  \"dynasty\": \"\",\n  \"reign\": \"\",\n  \"portfolio\": \"\",\n  \"artistRole\": \"\",\n  \"artistPrefix\": \"\",\n  \"artistDisplayName\": \"\",\n  \"artistDisplayBio\": \"\",\n  \"artistSuffix\": \"\",\n  \"artistAlphaSort\": \"\",\n  \"artistNationality\": \"\",\n  \"artistBeginDate\": \"\",\n  \"artistEndDate\": \"\",\n  \"artistGender\": \"\",\n  \"artistWikidata_URL\": \"\",\n  \"artistULAN_URL\": \"\",\n  \"objectDate\": \"second half 13th century\",\n  \"objectBeginDate\": 1350,\n  \"objectEndDate\": 1400,\n  \"medium\": \"Tempera and ink on parchment\",\n  \"dimensions\": \"3 1/8 x 2 13/16 in. (7.9 x 7.1 cm)\",\n  \"measurements\": null,\n  \"creditLine\": \"Gift of Bashford Dean, 1923\",\n  \"geographyType\": \"Made in\",\n  \"city\": \"Bologna\",\n  \"state\": \"\",\n  \"county\": \"\",\n  \"country\": \"Italy\",\n  \"region\": \"\",\n  \"subregion\": \"\",\n  \"locale\": \"\",\n  \"locus\": \"\",\n  \"excavation\": \"\",\n  \"river\": \"\",\n  \"classification\": \"Manuscripts and Illuminations\",\n  \"rightsAndReproduction\": \"\",\n  \"linkResource\": \"\",\n  \"metadataDate\": \"2024-10-03T04:53:53.567Z\",\n  \"repository\": \"Metropolitan Museum of Art, New York, NY\",\n  \"objectURL\": \"https://www.metmuseum.org/art/collection/search/32830\",\n  \"tags\": [\n    {\n      \"term\": \"Saint Peter\",\n      \"AAT_URL\": \"http://vocab.getty.edu/page/ia/901000056\",\n      \"Wikidata_URL\": \"https://www.wikidata.org/wiki/Q33923\"\n    },\n    {\n      \"term\": \"Men\",\n      \"AAT_URL\": \"http://vocab.getty.edu/page/aat/300025928\",\n      \"Wikidata_URL\": \"https://www.wikidata.org/wiki/Q8441\"\n    }\n  ],\n  \"objectWikidata_URL\": \"\",\n  \"isTimelineWork\": true,\n  \"GalleryNumber\": \"\"\n}\n\n```\n\nBy exploring the object data, we can identify several fields of interest:\n\n| Field       | Description |\n|------------|------------|\n| `title` | Name of the object |\n| `objectName` | Type of object (e.g., Manuscript cutting) |\n| `medium` | Materials used (e.g., Tempera on parchment) |\n| `culture` | Cultural origin (e.g., Italian) |\n| `objectDate` | Date or estimated time period |\n| `tags` | Controlled vocabulary terms (AAT & Wikidata) |\n\nFor our analysis, we will focus on the **tags** field, which provides a list of terms associated with the object. The tags field is particularly valuable because it uses controlled vocabularies like the Art and Architecture Thesaurus (AAT) and Wikidata, ensuring consistency across the dataset. These terms capture key themes and concepts, making them ideal for analyzing thematic areas in Medieval Art.\n\nDocumenting the focus of our analysis in a `README.md` file is a critical step in ensuring transparency and reproducibility. The `README.md` file provides future researchers (or your future self!) with a clear understanding of the dataset, its purpose, and how it was used. Here's an example of how you can document this information:\n\nHaving identified the tags field as the focus of our analysis, we can include that information in our `README.md` file to document the project. This is an example of how we can include that information in the `README.md` file:\n\n::: {.callout-note appearance=\"minimal\"}\n# Medieval Art Collection Analysis\n\nThis project aims to analyze the Medieval Art collection of the Metropolitan Museum of Art. The focus of this analysis is on the tags field, which provides a list of terms associated with each object, using controlled vocabularies like the Art and Architecture Thesaurus (AAT) and Wikidata. With that information, we aim to identify thematic areas and explore whether these topics reveal insights about Medieval Art — at least from the perspective of the Metropolitan Museum of Art's metadata, and propose a method to analyze arbitrary terms associated with museum collections.\n\n**License and right of use**\n\nThe data provided by the Metropolitan Museum of Art is published under a [Creative Commons Zero (CC0) license](https://creativecommons.org/publicdomain/zero/1.0/). This means that the data is in the public domain and can be used for any purpose without restriction. The derived data and code written for this project is published under the same license.\n::: \n\n## Collecting data\n\nNow that we have identified the tags field as the focus of our analysis, we can start collecting data. To do this, we need to extract the specific information we need and store it in a format suitable for analysis.\n\nTypically, this involves isolating the necessary information and storing it in a structured format like CSV (Comma-Separated Values). For our purpose, the CSV file will have two columns: `objectID` and `tags`. An example of the data is shown below:\n\n```csv\nobjectID,terms\n462990,\"['Entombment', 'Christ', 'Virgin Mary']\"\n462991,['Women']\n462992,\"['Men', 'Cross', 'Christ']\"\n462994,['Men']\n462995,['Men']\n462997,\"['Cross', 'Christ']\"\n462998,\"['Animals', 'Birds']\"\n463015,\"['Men', 'Portraits']\"\n463023,['Deer']\n463024,['Eagles']\n463032,\"['Entombment', 'Christ']\"\n463036,\"['Illness', 'Men', 'Women']\"\n463037,\"['Kings', 'Women', 'David', 'Eve']\"\n463039,\"['Kings', 'Baptismal Fonts', 'Saints']\"\n463040,\"['Infants', 'Women', 'Baptismal Fonts']\"\n463052,['Deer']\n463081,\"['Animals', 'Cross']\"\n463083,['Human Figures']\n463084,\"['Human Figures', 'Angels']\"\n```\n\nThis data was collected from the first 100 objects in the Medieval Art collection. It's important to note that not all objects have tags, and some only have one term. Exploring the data is crucial to understanding its completeness and whether it can answer our research question.\n\nInstead of treating tags as separate labels, we analyze co-occurrence—when two terms appear together in the same object. By counting these relationships, we can visualize which themes are closely related across different artworks. Even with incomplete data, we can identify thematic areas. For example, we can extract term pairs that co-occur within the same object. For object ID 462990, the terms `Entombment`, `Christ`, and `Virgin Mary` co-occur, which can be represented like this:\n\n```csv\nSource,Target\nEntombment,Christ\nEntombment,Virgin Mary\nChrist,Virgin Mary\n```\n\nWhen we notice that some pairs repeat across different objects, we can add weights to these pairs. For example, the pair Men and Cross appears in both 462992 and 462997, giving it a weight of 2. The table becomes:\n\n```csv\nSource,Target,Weight\nEntombment,Christ,1\nEntombment,Virgin Mary,1\nChrist,Virgin Mary,1\nMen,Cross,2\nMen,Christ,1\nCross,Christ,1\n```\n\nUsing this small sample, we can already start drafting a simple network graph to visualize these relationships.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(igraph)\n\nedges <- data.frame(\n  Source = c(\n  \"Entombment\", \"Entombment\", \"Christ\", \"Men\", \"Men\", \"Cross\", \n  \"Animals\", \"Men\", \"Illness\", \"Illness\", \"Men\", \"Kings\", \n  \"Kings\", \"Kings\", \"Women\", \"Women\", \"David\"\n),\n  Target = c(\n  \"Christ\", \"Virgin Mary\", \"Virgin Mary\", \"Cross\", \"Christ\", \"Christ\", \n  \"Birds\", \"Portraits\", \"Men\", \"Women\", \"Women\", \"Women\", \n  \"David\", \"Eve\", \"David\", \"Eve\", \"Eve\"\n),\n  Weight = c(\n  2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n)\n\n)\n\nnetwork <- graph_from_data_frame(edges, directed = FALSE)\n\nplot(\n  network,\n  vertex.size = 30,\n  vertex.label.cex = 0.8,\n  edge.width = E(network)$Weight * 2,\n  edge.color = \"gray50\",\n  vertex.color = \"lightblue\",\n  main = \"Network Graph\"\n)\n```\n\n::: {.cell-output-display}\n![](collecting-data-for-analysis_files/figure-html/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n\n\nThis simple network graph provides a glimpse of the relationships between terms. For instance, we can see how the network is highly centered around the term \"Men,\" which connects with other groups associated with \"Christ.\" In contrast, \"Women\" is part of a smaller group tied to terms like \"Eve,\" \"David,\" and \"Kings.\" While this is just a small sample, it demonstrates how network analysis can reveal thematic patterns.\n\nWith this proof of concept, we’re ready to scale up to the entire Medieval Art collection. The complete data includes term pairs from 3695 objects, resulting in 1725 unique pairs. The dataset is stored in a CSV file, which can be accessed here: [Medieval Art Data - Tags Pairs](https://github.com/jairomelo/intro2APIs-examples/blob/main/data/processed/processed_medieval_art_tags_pairs.csv). Below is a preview of the first 20 rows:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nterms_collection <- read.csv(\"https://raw.githubusercontent.com/jairomelo/intro2APIs-examples/refs/heads/main/data/processed/processed_medieval_art_tags_pairs.csv\")\nhead(terms_collection, 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Source                     Target Weight\n1               Achilles                   Centaurs      1\n2               Achilles                     Horses      1\n3               Achilles                        Men      1\n4               Achilles                      Tents      1\n5               Achilles                 Trojan War      1\n6                   Adam                     Angels      1\n7                   Adam                     Christ      2\n8                   Adam                Crucifixion      2\n9                   Adam                        Eve      6\n10                  Adam                   Nativity      1\n11                  Adam                Virgin Mary      1\n12                  Adam                    Working      1\n13 Adoration of the Magi Adoration of the Shepherds      2\n14 Adoration of the Magi                     Angels      4\n15 Adoration of the Magi               Annunciation      5\n16 Adoration of the Magi                       Beds      1\n17 Adoration of the Magi                     Christ      8\n18 Adoration of the Magi                Crucifixion      6\n19 Adoration of the Magi                       Dogs      1\n20 Adoration of the Magi                      Jesus      6\n```\n\n\n:::\n:::\n\n\n\n\n\n::: {.callout-note appearance=\"minimal\"}\nBoth raw and processed data are stored in the [project repository](https://github.com/jairomelo/intro2APIs-examples/tree/main/data). You can download the data directly from the repository to use it in your own analysis.\n:::\n\nIn the next chapter, we’ll use this full dataset to build a comprehensive network graph, analyze its structure, and uncover thematic clusters that provide deeper insights into the Medieval Art collection.\n\n::: {.callout-tip collapse=\"true\"}\n## A Note About Automation\nManually collecting data from over 7,000+ objects would be time-consuming and error-prone. By automating the retrieval and processing of metadata, we ensure accuracy, reproducibility, and scalability—allowing us to apply this method to other museum collections in the future.\n\nTo collect the data for this project, we used a Python script to automate the process. The script performs the following steps:\n\n1. Retrieves object IDs from the API.\n2. Fetches tags for each object.\n3. Generates term pairs and calculates weights.\n4. Saves the results in a CSV file for analysis.\n\nCode is available in the [project repository](https://github.com/jairomelo/intro2APIs-examples).  If you’re familiar with Python, you can experiment with it to collect data from other departments or customize it to fit your needs \n:::\n",
    "supporting": [
      "collecting-data-for-analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}